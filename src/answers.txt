Ответы на вопросы

4. Класс - это абстрактный тип данных, обобщенное представление о чем либо (условно, класс Human), а обьект -
это непосредственно экземпляр класса(например artem - это конкртеный человек, экземпляр класса Human)
5. 3 принципа ООП: Инкапсуляция, Наследование, Полиморфизм
        Инкапсуляция - грубо говоря, защита полей класса от внешних воздействий. Инкапсуляция говорит нам, что мы не можем
    напрямую обращаться к полям класса и вообще внутрь класса, а можем делать это через специальные методы. Это сделано
    в целях безопасности работоспособности класса, чтобы все данные, входящие в класс, подвергались проверке на валидность
        Наследование - говорит нам, что мы можем создать дочерний класс от уже существующего (в целях избегания повторения кода).
    Взять тот же пример, что я писал выше. У нас есть класс Human, а мы хотим создать класс Worker, в котором будет
    все тоже самое, что и в классе Human, только бдет поле с названием профессии.
    Писать практически полностью идентичный класс не очень хорошая идея, ведь класс Worker можно отнаследовать от уже
    существующего и добваить все что нужно. Думаю, что понять наследование может помочь фраза: "Каждый хирург врач, но не каждый врач хирург"
        Полиморфизм - говорит нам, методы могут выполнять одну задачу, и выдавать то что требуется, но по разному.
    Картинка с животными из учебника это хорошо показывает: каждое животное бежит, но по разному.
6. Модификаторы доступа: public, private, protected, default
public - класс, метод, переменная видны везде и ее можно откуда угодно поменять
private - класс, метод, переменная только в пределах класса, метода где они написаны, менять можно только там где они
    написаны, в других облястях недоступны. Этот модификатор нужен для инкапсуляции
protected - как private, только виден в отнаследованных классах, в этих классах ведет себя как public
default - модификатор по умолчанию, используется, когда другие модификаторы не указали, видимость в пределах пакета
